package com.rcsit.scf.bsp.controller;

import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.TypeReference;
import com.rcsit.scf.bsp.domain.PageModel;
import com.rcsit.scf.bsp.domain.ResponseModel;
import com.rcsit.scf.bsp.handler.AvfFinancingReceiptHandler;
import com.rcsit.scf.bsp.handler.AvfRequiteNoticeHandler;
import com.rcsit.scf.bsp.handler.PbmVerdorHandler;
import com.rcsit.scf.bsp.model.avf.AvfAccountsRecTraNotice;
import com.rcsit.scf.bsp.model.avf.AvfFinancingDemandHead;
import com.rcsit.scf.bsp.model.pbm.PbmVerdor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

/** 还款
 * Created by chenkai on 2017/5/9.
 */
@Controller
@RequestMapping(value = "/avf/requite")
public class AvfRequiteNoticeController extends BaseController {
    private AvfRequiteNoticeHandler avfRequiteNoticeHandler = new AvfRequiteNoticeHandler();
    private AvfFinancingReceiptHandler avfFinancingReceiptHandler = new AvfFinancingReceiptHandler();
    private PbmVerdorHandler pbmVerdorHandler = new PbmVerdorHandler();

    /**
     * 还款融资列表跳转
     *
     * @param
     * @return
     * @author
     */
    @RequestMapping(value = "/toRepaymentPage")
    public String toRepaymentPage() {
        return "avf/enterprise/repayment";
    }
    /**
     * 还款融资列表
     *
     * @param
     * @return
     * @author
     */
    @ResponseBody
    @RequestMapping(value = "/repaymentList")
    public Object repaymentList(@CookieValue("token")String token, @RequestParam("page")int page, @RequestParam(value = "rows" ,defaultValue = "25")int rows) {
        JSONObject data = avfRequiteNoticeHandler.doRepaymentList(token,page,rows);
        return new PageModel(data);
    }

    /**
     * 跳转还款倒计时页面
     * @param
     */
    @RequestMapping(value = "/toRepaymentDetails")
    public String toRepaymentDetails(Model model, @CookieValue("token")String token, @RequestParam("id")String id){
        AvfAccountsRecTraNotice details = avfFinancingReceiptHandler.getFinancingReceiptDetails(id, token);
        String verdor = pbmVerdorHandler.doVerdorDetail(details.getSupplyCode(),token);
        model.addAttribute("notice",details);
        model.addAttribute("verdor",JSONObject.parseObject(verdor, new TypeReference<PbmVerdor>(){}));
        return "avf/enterprise/repayment_time";
    }
    /**
     * 还款倒计时
     *
     * @param
     * @return
     * @author
     */
    @ResponseBody
    @RequestMapping(value = "/repaymentCountDown")
    public ResponseModel repaymentCountDown(@CookieValue("token")String token,@RequestParam(value = "id")String id) {
        int numData = avfRequiteNoticeHandler.doRepaymentCountDown(token,id);
        return ResponseModel.SUCCESS(numData);
    }


}
