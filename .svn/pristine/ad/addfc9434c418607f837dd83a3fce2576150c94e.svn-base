package com.rcsit.scf.bsp.controller;

import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.TypeReference;
import com.rcsit.scf.bsp.domain.PageModel;
import com.rcsit.scf.bsp.domain.ResponseModel;
import com.rcsit.scf.bsp.exception.RequestErrorException;
import com.rcsit.scf.bsp.handler.AvfFinancingDemandHandler;
import com.rcsit.scf.bsp.model.avf.AvfFinancingDemandHead;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.lang.reflect.InvocationTargetException;

/** 融资需求申请
 * Created by chenkai on 2017/5/9.
 */
@Controller
@RequestMapping(value = "/avf/financingDemand")
public class AvfFinancingDemandController extends BaseController {

    private AvfFinancingDemandHandler avfFinancingDemandHandler = new AvfFinancingDemandHandler();

    /**
     * 融资需求申请列表查询
     * @param token
     */
    @RequestMapping(value = "/demandList")
    public String demandList(Model model, @CookieValue("token")String token, @RequestParam("page")int page, @RequestParam(value = "rows" ,defaultValue = "25")int rows){
        JSONObject data = avfFinancingDemandHandler.doDemandList(token,page,rows);
        if(null != data){
            model.addAttribute("demands",new PageModel(data));
        }
        return "test";
    }
    /**
     * 融资需求详情 申请进度
     * @param id
     */
    @RequestMapping(value = "/demandProgress")
    public String demandProgress(Model model,@RequestParam("id")String id){
        AvfFinancingDemandHead head = avfFinancingDemandHandler.doDemandProgress(id);
        model.addAttribute("demandHead",head);
        return "test";
    }
    /**
     * 新增融资申请
     * @author
     * @param
     */
    @RequestMapping(value = "/saveFinancingDemand")
    public String saveFinancingDemand(@CookieValue("token")String token,
                                     AvfFinancingDemandHead demandHead,
                                     @RequestParam("infos") String infos) throws InvocationTargetException, IllegalAccessException {

        try {
            avfFinancingDemandHandler.doSaveFinancingDemand(token, demandHead, infos);
        } catch (Exception e) {
            throw new RequestErrorException(e.getMessage());
        }
        return "test";
    }

    /**
     * 维护延长账款
     *
     * @param
     * @return
     * @author
     */
    @ResponseBody
    @RequestMapping(value = "/maintainExtendMoney")
    public ResponseModel maintainExtendMoney(@CookieValue("token") String token,
                                             @RequestParam("id") String id,
                                             @RequestParam("isPast") boolean isPast,
                                             String intentionFmoney,
                                             String intentionFterm) throws InvocationTargetException, IllegalAccessException {
        avfFinancingDemandHandler.doMaintainExtendMoney(token,id,isPast,intentionFmoney,intentionFterm);
        return ResponseModel.SUCCESS();
    }

    /**
     * 还款融资列表
     *
     * @param
     * @return
     * @author
     */
    @RequestMapping(value = "/repaymentList")
    public String repaymentList(Model model,@CookieValue("token")String token, @RequestParam("page")int page, @RequestParam(value = "rows" ,defaultValue = "25")int rows) {
        JSONObject data = avfFinancingDemandHandler.doRepaymentList(token,page,rows);
        if(null != data){
            model.addAttribute("repayments",new PageModel(data));
        }
        return "test";
    }
    /**
     * 还款倒计时
     *
     * @param
     * @return
     * @author
     */
    @ResponseBody
    @RequestMapping(value = "/repaymentCountDown")
    public ResponseModel repaymentCountDown(@RequestParam(value = "id")String id) {
        int numData = avfFinancingDemandHandler.doRepaymentCountDown(id);
        return ResponseModel.SUCCESS(numData);
    }

}
