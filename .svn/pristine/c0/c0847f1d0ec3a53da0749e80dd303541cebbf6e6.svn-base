package com.rcsit.scf.bsp.controller;

import com.alibaba.fastjson.JSONObject;
import com.rcsit.scf.bsp.domain.PageModel;
import com.rcsit.scf.bsp.domain.ResponseModel;
import com.rcsit.scf.bsp.exception.RequestErrorException;
import com.rcsit.scf.bsp.handler.AvfWaitFinInvoiceHandler;
import com.rcsit.scf.bsp.model.avf.AvfWaitFinInvoiceHead;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;



/**
 * 待融资发票
 * Created by chenkai on 2017/5/9.
 */
@Controller
@RequestMapping(value = "/avf/invoice")
public class AvfWaitFinInvoiceController extends BaseController {

    private AvfWaitFinInvoiceHandler avfWaitFinInvoiceHandler = new AvfWaitFinInvoiceHandler();


    /**
     * 发票页面跳转
     * @author
     * @param  type enterprise 核心企业   supplier 供应商
     * @return
     */
    @RequestMapping(value = "/toWaitPage")
    public String toWaitPage(@RequestParam(value = "type",defaultValue = "supplier")String type){
        return "avf/"+type+"/invoice_prepare";
    }
    /**
     * 发票页面列表查询
     * @author
     * @param token
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/waitList")
    public Object waitList(Model model, @CookieValue("token")String token, @RequestParam("page")int page, @RequestParam(value = "rows" ,defaultValue = "25")int rows){
        JSONObject data = avfWaitFinInvoiceHandler.doWaitList(token,page,rows);
        return new PageModel(data);
    }

    /**
     * 手动录入发票跳转页面
     * @param  type enterprise 核心企业   supplier 供应商
     * @return
     */
    @RequestMapping(value = "/toAddInvoice")
    public String toAddInvoice(@RequestParam(value = "type",defaultValue = "supplier")String type){
        return "avf/"+type+"/entry_invoice";
    }
    /**
     * 手动录入发票
     * @author
     * @param
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/manualAddInvoice")
    public ResponseModel manualAddInvoice(@CookieValue("token")String token,
                                          AvfWaitFinInvoiceHead invoiceHead,
                                          @RequestParam("infos")String infos) {
        try {
            avfWaitFinInvoiceHandler.doManualAddInvoice(token, invoiceHead, infos);
        } catch (Exception e) {
            throw new RequestErrorException(e.getMessage());
        }
        return ResponseModel.SUCCESS();
    }
    /**
     * 录入发票唯一验证
     * @author
     * @param token
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/invoiceOnlyVerify")
    public ResponseModel invoiceOnlyVerify(@CookieValue("token")String token,
                                     @RequestParam("invoiceCode")String invoiceCode,
                                     @RequestParam("invoiceNo")String invoiceNo){
        boolean isExist = avfWaitFinInvoiceHandler.doInvoiceOnlyVerify(token, invoiceCode, invoiceNo);
        return ResponseModel.SUCCESS(isExist);
    }

    /**
     * 待融资发票详情和审核
     * @param type true 跳转审核  false跳转详情
     * @return
     */
    @RequestMapping(value = "/toInvoiceDetailPage")
    public String toInvoiceDetailPage(boolean type){
        if(type){
            return "avf/enterprise/invoice_audit";  //跳转审核页面
        }
        return "avf/enterprise/invoice_details";   //跳转详情页面
    }
    /**
     * 待融资发票详情和审核
     * @param docNo
     * @param page
     * @param rows
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/invoiceDetail")
    public Object invoiceDetail(Model model,@RequestParam("docNo")String docNo, @RequestParam("page")int page, @RequestParam(value = "rows" ,defaultValue = "25")int rows,boolean type){
        JSONObject data = avfWaitFinInvoiceHandler.doInvoiceDetail(docNo,page,rows);
        return new PageModel(data);
    }

    /**
     * 待融资发票审核
     * @param id
     * @param businessDealStatus
     * @param businessDealInfo
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/invoiceExamine")
    public ResponseModel invoiceExamine(@RequestParam("id")String id,
                                  @RequestParam("businessDealStatus") String businessDealStatus,
                                  @RequestParam("businessDealInfo")String businessDealInfo ){
        try {
            avfWaitFinInvoiceHandler.doInvoiceExamine(id, businessDealStatus, businessDealInfo);
        } catch (Exception e) {
            throw new RequestErrorException(e.getMessage());
        }
        return ResponseModel.SUCCESS();
    }
    /**
     * 导入发票
     * @author
     * @param token
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/importInvoice")
    public ResponseModel importInvoice(@CookieValue("token")String token, @RequestParam("file") MultipartFile file){
        try {
            avfWaitFinInvoiceHandler.doImportInvoice(token, file);
        } catch (Exception e) {
            throw new RequestErrorException(e.getMessage());
        }
        return ResponseModel.SUCCESS();
    }

    /**
     * 可融资发票跳转
     * @param
     * @return
     */
    @RequestMapping(value = "/toApplyInfoPage")
    public String toApplyInfoPage(){
        return "avf/supplier/add_finance1";
    }
    /**
     * 可融资发票列表
     * @param token
     * @param companyName
     * @param page
     * @param rows
     * @return
     */
    @ResponseBody
    @RequestMapping(value = "/applyInfoList")
    public Object applyInfoList(Model model,@CookieValue("token")String token,@RequestParam("companyName")String companyName,@RequestParam("page")int page, @RequestParam(value = "rows" ,defaultValue = "25")int rows){
        JSONObject data = avfWaitFinInvoiceHandler.doApplyInfoList(token,page,rows);
        return new PageModel(data);
    }
}
